// Configuration for the build itself
buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.ajoberstar.grgit:grgit-gradle:4.0.2"
		classpath "com.github.node-gradle:gradle-node-plugin:2.2.3"
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
		classpath 'com.github.jk1:gradle-license-report:1.13'
		classpath "joda-time:joda-time:2.8.1"
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.3.3.RELEASE")
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "jacoco"
	id "org.ajoberstar.grgit" version "4.0.2"
	id "com.github.node-gradle.node" version "2.2.3"
	id "org.sonarqube" version "3.0"
	id "com.github.jk1.dependency-license-report" version "1.13"
	id "com.bmuschko.docker-remote-api" version "6.6.1"
	id 'com.bmuschko.docker-spring-boot-application' version '6.6.1'
	id "com.patdouble.awsecr" version "0.6.1"
}

apply from: 'dependencies.gradle'

group = 'com.github.dgwatts'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot deps, with logback excluded. Defined first to ensure the dependencies declared in it are resolved first
	implementation platform(libraries.springBoot.dependencies), libraries.springBoot.exclusions

	implementation libraries.springBoot.starterWeb, libraries.springBoot.exclusions
	implementation libraries.springBoot.starterActuator, libraries.springBoot.exclusions
	implementation libraries.springBoot.starterTomcat, libraries.springBoot.exclusions

	implementation libraries.gson

	implementation libraries.slf4j.api
	implementation libraries.slf4j.simple

	developmentOnly libraries.springBoot.devTools, libraries.springBoot.exclusions
	testImplementation libraries.springBoot.starterTest, libraries.springBoot.testExclusions
}

docker {
	springBootApplication {
		maintainer = "dgwatts+yozu@gmail.com"
		baseImage = 'openjdk:8-alpine'
		ports = [8080]
		images.add("${System.env.AWS_ECR_ID}.dkr.ecr.${System.env.AWS_ECR_REGION}.amazonaws.com/${System.env.AWS_ECR_REPO}:${project.version}")
	}

	registryCredentials {
		url = 'https://${System.env.AWS_ECR_ID}.dkr.ecr.${System.env.AWS_ECR_ID}.amazonaws.com'
	}
}

test {
	useJUnitPlatform()
}
